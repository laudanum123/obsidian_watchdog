[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "obsidian_watchdog"
version = "0.1.0"
description = "Watches an Obsidian vault and runs agents on modified notes."
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {email = "your@email.com"},
    {name = "Your Name"}
]
dependencies = [
    "watchdog==6.0.0",
    "python-dotenv==1.1.0",
    "pydantic-ai==0.1.11", # Adjust version as per your setup
    "openai==1.78.0", # If using OpenAI provider directly or for types
    "duckdb==1.2.2", # For database
    # "pytest", # For testing - moved to optional-dependencies
    # "pytest-asyncio", # For async tests - moved to optional-dependencies
    "diff-match-patch", # For diffing and patching text
    # Add other specific LLM provider SDKs if needed, e.g., anthropic, cohere
    "annotated-types==0.7.0",
    "anthropic==0.51.0",
    "anyio==4.9.0",
    "argcomplete==3.6.2",
    "boto3==1.38.13",
    "botocore==1.38.13",
    "cachetools==5.5.2",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.1.8",
    "cohere==5.15.0",
    "colorama==0.4.6",
    "deprecated==1.2.18",
    "distro==1.9.0",
    "eval-type-backport==0.2.2",
    "exceptiongroup==1.2.2",
    "executing==2.2.0",
    "fastavro==1.10.0",
    "filelock==3.18.0",
    "fsspec==2025.3.2",
    "google-auth==2.40.1",
    "googleapis-common-protos==1.70.0",
    "griffe==1.7.3",
    "groq==0.24.0",
    "h11==0.16.0",
    "hf-xet==1.1.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "httpx-sse==0.4.0",
    "huggingface-hub==0.31.1",
    "idna==3.10",
    "importlib-metadata==8.6.1",
    "jiter==0.9.0",
    "jmespath==1.0.1",
    "logfire==3.15.0",
    "logfire-api==3.15.0",
    "markdown-it-py==3.0.0",
    "mcp==1.8.0",
    "mdurl==0.1.2",
    "mistralai==1.7.0",
    "opentelemetry-api==1.32.1",
    "opentelemetry-exporter-otlp-proto-common==1.32.1",
    "opentelemetry-exporter-otlp-proto-http==1.32.1",
    "opentelemetry-instrumentation==0.53b1",
    "opentelemetry-proto==1.32.1",
    "opentelemetry-sdk==1.32.1",
    "opentelemetry-semantic-conventions==0.53b1",
    "packaging==25.0",
    "prompt-toolkit==3.0.51",
    "protobuf==5.29.4",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.2",
    "pydantic==2.11.4",
    "pydantic-ai-slim==0.1.11",
    "pydantic-core==2.33.2",
    "pydantic-evals==0.1.11",
    "pydantic-graph==0.1.11",
    "pydantic-settings==2.9.1",
    "pygments==2.19.1",
    "python-dateutil==2.9.0.post0",
    "python-multipart==0.0.20",
    "pyyaml==6.0.2",
    "requests==2.32.3",
    "rich==14.0.0",
    "rsa==4.9.1",
    "s3transfer==0.12.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "sse-starlette==2.3.4",
    "starlette==0.46.2",
    "tinydb==4.8.2",
    "tokenizers==0.21.1",
    "tomli==2.2.1",
    "tqdm==4.67.1",
    "types-requests==2.32.0.20250328",
    "typing-extensions==4.13.2",
    "typing-inspection==0.4.0",
    "urllib3==2.4.0",
    "uvicorn==0.34.2",
    "wcwidth==0.2.13",
    "wrapt==1.17.2",
    "zipp==3.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-env",
    # Add other dev dependencies here, e.g., ruff, mypy
]

[project.scripts]
obsidian-watchdog = "obsidian_watchdog.main:cli"

[tool.setuptools.packages.find]
where = ["src"]
include = ["obsidian_watchdog*"] # Adjust if your main package is just 'obsidian_watchdog'
exclude = ["tests*"]

[tool.ruff]
# ... your ruff config ...
